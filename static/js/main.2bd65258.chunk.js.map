{"version":3,"sources":["components/Person.js","components/PeopleTable.js","api/getPeople.js","App.js","index.js"],"names":["Person","_ref","_classNames","person","handleClick","selectedPersonId","react_default","a","createElement","className","classNames","person--lived-over-65","age","Object","defineProperty","concat","century","sex","children","onClick","id","born--before_1650","born","died--after_1800","died","name","mother","father","map","child","join","PeopleTable","state","_this","setState","_this2","this","people","props","components_Person","key","React","Component","getPeople","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","fetch","sent","json","abrupt","index","objectSpread","Math","ceil","filter","stop","apply","arguments","getSortedPeople","sortField","query","length","undefined","callback","personA","personB","localeCompare","toConsumableArray","toLowerCase","includes","sort","App","visiblePeople","loadData","sortBy","handleQueryChange","event","target","value","_this$state","type","onChange","components_PeopleTable","ReactDOM","render","src_App_0","test","document","getElementById"],"mappings":"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","file":"static/js/main.2bd65258.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst Person = ({ person, handleClick, selectedPersonId }) => (\n  <tr\n    className={classNames({\n      person: true,\n      'person--lived-over-65': person.age > 65,\n      [`person--lived-in-${person.century}`]: true,\n      'person--male': person.sex === 'm',\n      'person--female': person.sex === 'f',\n      'person--mother': person.sex === 'f' && person.children,\n      'person--father': person.sex === 'm' && person.children,\n      'row--selected': selectedPersonId,\n    })}\n    onClick={() => handleClick(person.id)}\n  >\n    <td>{person.id}</td>\n    <td\n      className={classNames({\n        'born--before_1650': person.born < 1650,\n        'died--after_1800': person.died > 1800,\n      })}\n    >\n      {person.name}\n    </td>\n    <td>\n      {person.sex}\n    </td>\n    <td>\n      {person.born}\n    </td>\n    <td>{person.died}</td>\n    <td>{person.mother}</td>\n    <td>{person.father}</td>\n    <td>{person.age}</td>\n    <td>{person.century}</td>\n    <td>{person.children.map(child => child.name).join(', ')}</td>\n  </tr>\n);\n\nPerson.propTypes = {\n  person: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    sex: PropTypes.string.isRequired,\n    born: PropTypes.number.isRequired,\n    died: PropTypes.number.isRequired,\n    mother: PropTypes.string,\n    father: PropTypes.string,\n    age: PropTypes.number.isRequired,\n    century: PropTypes.number.isRequired,\n    children: PropTypes.array,\n  }).isRequired,\n  selectedPersonId: PropTypes.bool.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Person from './Person';\n\nclass PeopleTable extends React.Component {\n  state = {\n    selectedPersonId: null,\n  };\n\n  handleClick = (id) => {\n    this.setState({ selectedPersonId: id });\n  };\n\n  render() {\n    const { people } = this.props;\n    const { selectedPersonId } = this.state;\n    return (\n      <table className=\"PeopleTable\">\n        <thead>\n          <tr>\n            <th>id</th>\n            <th>name</th>\n            <th>sex</th>\n            <th>born</th>\n            <th>died</th>\n            <th>mother</th>\n            <th>father</th>\n            <th>age</th>\n            <th>century</th>\n            <th>children</th>\n          </tr>\n        </thead>\n        <tbody>\n          {people.map(person => (\n            <Person\n              person={person}\n              key={person.name}\n              selectedPersonId={person.id === selectedPersonId}\n              handleClick={this.handleClick}\n            />\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PeopleTable;\n","// eslint-disable-next-line\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nconst getPeople = async() => {\n  const response = await fetch(API_URL);\n  const people = await response.json();\n  return people.map((person, index) => ({\n    id: index + 1,\n    ...person,\n    age: person.died - person.born,\n    century: Math.ceil(person.died / 100),\n    children: people\n      .filter(child => (child.father === person.name)\n        || (child.mother === person.name)),\n  }\n  ));\n};\n\nexport default getPeople;\n","import React from 'react';\nimport PeopleTable from './components/PeopleTable';\nimport getPeople from './api/getPeople';\nimport './App.css';\n\nconst getSortedPeople = (people, sortField, query = '') => {\n  const callback = (typeof people[0][sortField] === 'string')\n    ? (personA, personB) => personA[sortField].localeCompare(personB[sortField])\n    : (personA, personB) => personA[sortField] - personB[sortField];\n\n  return [...people]\n    .filter(person => person.name.toLowerCase().includes(query.toLowerCase()))\n    .sort(callback);\n};\n\nclass App extends React.Component {\n  state = {\n    people: [],\n    visiblePeople: [],\n    sortField: 'id',\n    query: '',\n  };\n\n  async componentDidMount() {\n    this.loadData();\n  }\n\n  loadData = async() => {\n    const people = await getPeople();\n    this.setState({\n      people,\n      visiblePeople: getSortedPeople(people, 'id'),\n    });\n  };\n\n  sortBy = (sortField) => {\n    this.setState(state => ({\n      visiblePeople: getSortedPeople(state.people, sortField, state.query),\n      sortField,\n    }));\n  };\n\n  handleQueryChange = (event) => {\n    const query = event.target.value;\n    this.setState(state => ({\n      visiblePeople: getSortedPeople(state.people, state.sortField, query),\n      query,\n    }));\n  };\n\n  render() {\n    const { people, visiblePeople, query } = this.state;\n    return (\n      <div className=\"App\">\n        <h1>\n          {`${people.length}`}\n          {' '}\n          people sorted by\n          {' '}\n          {this.state.sortField}\n        </h1>\n\n        <input\n          type=\"text\"\n          value={query}\n          onChange={this.handleQueryChange}\n        />\n\n        <button type=\"button\" onClick={() => this.sortBy('id')}>\n          Sort by ID\n        </button>\n\n        <button type=\"button\" onClick={() => this.sortBy('name')}>\n          Sort by name\n        </button>\n\n        <button type=\"button\" onClick={() => this.sortBy('age')}>\n          Sort by age\n        </button>\n\n        <button type=\"button\" onClick={() => this.sortBy('born')}>\n          Sort by year of birth\n        </button>\n\n        <button type=\"button\" onClick={() => this.sortBy('died')}>\n          Sort by year of death\n        </button>\n\n        <PeopleTable\n          people={visiblePeople}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}